name: PR Build Test

on:
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: |
            - recursive: true
              args: [--frozen-lockfile]
            - args: [--global, gulp, prettier, vitest]

      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: rust-src

      - name: Add Rust to PATH
        run: echo "$HOME/.cargo/bin" >> $env:GITHUB_PATH

      - name: Check Cargo installation
        run: cargo --version

      - name: Install OpenCV dependencies
        run: |
          choco install -y llvm --version 16.0.6
          choco install -y opencv

      - name: Verify OpenCV installation
        run: |
          ls C:\tools\opencv\build\x64\vc16\bin

      - name: Set environment variables
        run: |
          echo "OPENCV_DIR=C:\tools\opencv" >> $env:GITHUB_ENV
          echo "OPENCV_LIB_DIR=C:\tools\opencv\build\x64\vc16\lib" >> $env:GITHUB_ENV
          echo "OPENCV_INCLUDE_DIR=C:\tools\opencv\build\include" >> $env:GITHUB_ENV
          echo "OPENCV_BIN_DIR=C:\tools\opencv\build\x64\vc16\bin" >> $env:GITHUB_ENV
          echo "OPENCV_LINK_LIBS=opencv_world460" >> $env:GITHUB_ENV
          echo "OPENCV_LINK_PATHS=C:\tools\opencv\build\x64\vc16\lib" >> $env:GITHUB_ENV
          echo "OPENCV_INCLUDE_PATHS=C:\tools\opencv\build\include" >> $env:GITHUB_ENV
          echo "PKG_CONFIG_PATH=C:\tools\opencv\lib\pkgconfig" >> $env:GITHUB_ENV
          echo "VCPKGRS_DYNAMIC=1" >> $env:GITHUB_ENV

      #      - name: vcpkg build
      #        uses: johnwason/vcpkg-action@v6
      #        id: vcpkg
      #        with:
      #          pkgs: opencv[contrib]
      #          triplet: x64-windows
      #          token: ${{ github.token }}
      #          github-binarycache: true

      #      - name: Configure environment variables
      #        run: |
      #          echo "VCPKG_ROOT=C:\Program Files\vcpkg" >> $env:GITHUB_ENV
      #          echo "OpenCV_DIR=C:\Program Files\vcpkg\installed\x64-windows\share\opencv" >> $env:GITHUB_ENV
      #          echo "OPENCV_LINK_LIBS=opencv_world460" >> $env:GITHUB_ENV
      #          echo "OPENCV_LINK_PATHS=C:\Program Files\vcpkg\installed\x64-windows\lib" >> $env:GITHUB_ENV
      #          echo "OPENCV_INCLUDE_PATHS=C:\Program Files\vcpkg\installed\x64-windows\include" >> $env:GITHUB_ENV

      - name: Add OpenCV DLLs to PATH
        run: |
          echo "C:\tools\opencv\build\x64\vc16\bin" >> $env:GITHUB_PATH
          echo "src-tauri/dll" >> $env:GITHUB_PATH


      - name: Install project dependencies
        run: pnpm install

      - name: Cache Tauri Build
        uses: actions/cache@v3
        with:
          path: |
            src-tauri/target/release
            src-tauri/target/debug
          key: tauri-${{ runner.os }}-${{ hashFiles('src-tauri/Cargo.lock') }}
          restore-keys: |
            tauri-${{ runner.os }}-

      - name: Build Tauri app
        run: pnpm tauri build --verbose